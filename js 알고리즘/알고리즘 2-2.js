// 문제 : i팩토리얼 (i!)은 1부터 i까지 정수의 곱을 의미합니다. 예를들어 5! = 5 * 4 * 3 * 2 * 1 = 120 입니다.
// 정수 n이 주어질 때 다음 조건을 만족하는 가장 큰 정수 i를 return 하도록 solution 함수를 완성해주세요.

// let i = 1; // i 의 초기값은 1 부터 시작. 숫자가 하나씩 늘어나며 accom(누적된수) 에 곱해준다.
// 여기서 따로 선언을 해주는 이유는 일반적으로 for 문에서 i 를 선언하고 초기화 해주는 것처럼 하면

function solution(n) {
  let factorial = 1; // 팩토리얼이 초기값은 1, 팩토리얼을 반대로 계산하려 한다면 초기값은 무조건 1 이기 때문.
  let i; // 여기서 i 를 선언해주는 이유는 for 문 외부에서도 i 를 사용해야 하기 때문이다. (하위 스코프에서 유효한 변수는 상위 스코프 에서는 참조 할수 없지만, 반대로 상위 스코프에서 유효한 변수는 하위에서도 참조 할수 있다는 점.)
  // 즉 for 문 내부에서 외부에서 선언된 i 의 값을 끌어다가 사용할수 있다.

  for (i = 1; factorial <= n; i++) {
    factorial *= i;
  }

  return i - 2;
}

console.log(solution(4));

// 알고리즘 2-2 풀이 note.
// -- 조건 1. i! ≤ n   //  2. 0 < n ≤ 3,628,800
// 1. 즉 어떤 정수 n 이 주어졌을떄 그 숫자보다 적은 최대의 팩토리얼 값을 생성하는 i 를 반환하는 문제이다.
// 2. 기본적인 조건은 i! 이 n 보다 작거나 같다 일것이고, n 을 대입 했을때 반환값이 나오도록 함수를 작성하면 될것이다.
// 3. 그렇다면 어떤 조건아래 최대치를 구하려면 작은숫자, 즉 1 부터 차례대로 곱해 나가다가 한계점에 도착했을때 순환을 멈추고 i 값을 반환하면 될것이다.
// 4.
